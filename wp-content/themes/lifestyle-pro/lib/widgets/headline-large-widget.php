<?php
/**
 * Genesis Framework.
 *
 * WARNING: This file is part of the core Genesis Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package Genesis\Widgets
 * @author  StudioPress
 * @license GPL-2.0+
 * @link    http://my.studiopress.com/themes/genesis/
 */

/**
 * Genesis Featured Post widget class.
 *
 * @since 0.1.8
 *
 * @package Genesis\Widgets
 */
class Headline_Large_Widget extends WP_Widget {

	/**
	 * Holds widget settings defaults, populated in constructor.
	 *
	 * @var array
	 */
	protected $defaults;

	/**
	 * Constructor. Set the default widget options and create widget.
	 *
	 * @since 0.1.8
	 */
	function __construct() {

		$this->defaults = array(
			'title'                   => '',
			'post_id'               => '',
		);

		$widget_ops = array(
			'classname'   => 'main-featured-content mainfeaturedpost',
			'description' => __( 'Displays large headline with thumbnail', 'custom' ),
		);

		$control_ops = array(
			'id_base' => 'headline-large-post',
			'width'   => 505,
			'height'  => 350,
		);

		parent::__construct( 'headline-large-post', __( 'Flying Runner - Large Headline', 'custom' ), $widget_ops, $control_ops );

	}

	/**
	 * Echo the widget content.
	 *
	 * @since 0.1.8
	 *
	 * @param array $args Display arguments including before_title, after_title, before_widget, and after_widget.
	 * @param array $instance The settings for the particular instance of the widget
	 */
	function widget( $args, $instance ) {

		global $wp_query, $_genesis_displayed_ids;

		extract( $args );

		//* Merge with defaults
		$instance = wp_parse_args( (array) $instance, $this->defaults );

		echo $before_widget;

		//* Display the title if set
		if ( ! empty( $instance['title'] ) )
			echo $before_title . apply_filters( 'widget_title', $instance['title'], $instance, $this->id_base ) . $after_title;

		//See http://www.billerickson.net/code/wp_query-arguments/ 
		$query_args = array(
			'p' => $instance['post_id']
		);		
	
		$wp_query = new WP_Query( $query_args );

		if ( !have_posts()) printf('Large headline widget: Post with ID %s not found',$instance['post_id']);
		
		//There will actually only be one post returned
		if ( have_posts() ) {
			
			the_post();
			
			// If a custom field called "short_title" is defined on the post, use that for the entry title instead of the main post title
			$short_title = get_post_meta(get_the_ID(), "short_title", true);			
			if ( ! empty ($short_title))
			{
				$title = $short_title;
				$title_clean = strip_tags($short_title);
				$title_clean = esc_attr($title_clean);	
			}						
			else
			{
				$title = get_the_title();
				$title_clean = the_title_attribute( 'echo=0' );
			}
			
			echo '<div class="headline-large xdebug-borders">';
				/** Header */
				echo '<div class="headline-large-header">';
						printf( '<h2><a href="%s" title="%s">%s</a></h2>', get_permalink(), $title_clean, $title );								
				echo '</div>';
				
				/** Content */
				echo '<div class="headline-large-content">';
					/** Image */
					echo '<div class="headline-large-image">';
						$thumb_url = '';
						if( class_exists('Dynamic_Featured_Image') ) {
							global $dynamic_featured_image;
							$featured_images = $dynamic_featured_image->get_featured_images( );
							$featured_image = $featured_images[0];
							$thumb_url = $featured_image['full'];
						   //You can now loop through the image to display them as required
						}
						else
						{
							//Get the url of the featured image
							$thumb_id = get_post_thumbnail_id();
							$thumb_url_array = wp_get_attachment_image_src($thumb_id, 'thumbnail-size', true);
							$thumb_url = $thumb_url_array[0];
						}
						if (! empty ($thumb_url)) {						
							$imagetag = sprintf( '<img src="%s"/>', $thumb_url);
							printf( '<a href="%s" title="%s">%s</a>', get_permalink(), the_title_attribute( 'echo=0' ), $imagetag );								
						
						}
					echo '</div>';
					
					/** Text */
					echo '<div class="headline-large-text">';
						the_excerpt();
					echo '</div>';
				echo '</div>';
				
			echo '</div>';			
		}			

		//* Restore original query
		wp_reset_query();

		echo $after_widget;
	}

	/**
	 * Update a particular instance.
	 *
	 * This function should check that $new_instance is set correctly.
	 * The newly calculated value of $instance should be returned.
	 * If "false" is returned, the instance won't be saved/updated.
	 *
	 * @since 0.1.8
	 *
	 * @param array $new_instance New settings for this instance as input by the user via form()
	 * @param array $old_instance Old settings for this instance
	 * @return array Settings to save or bool false to cancel saving
	 */
	function update( $new_instance, $old_instance ) {

		$new_instance['title']     = strip_tags( $new_instance['title'] );
		$new_instance['more_text'] = strip_tags( $new_instance['more_text'] );
		$new_instance['post_info'] = wp_kses_post( $new_instance['post_info'] );
		return $new_instance;

	}

	/**
	 * Echo the settings update form.
	 *
	 * @since 0.1.8
	 *
	 * @param array $instance Current settings
	 */
	function form( $instance ) {

		//* Merge with defaults
		$instance = wp_parse_args( (array) $instance, $this->defaults );
		$post_id = $instance['post_id']; 
		?>

		<p>
			<label for="<?php echo $this->get_field_id( 'post_id' ); ?>"><?php _e( 'Post to show as a large  headline', 'genesis' ); ?>:</label>
			
			<!--Dropdown list of posts-->
			<select class='widefat' id="<?php echo $this->get_field_id('post_id'); ?>"
                name="<?php echo $this->get_field_name('post_id'); ?>" type="text">
				<?php
				
				//* Get an array of all published posts, most recent first
				$args = array(
					'nopaging' => true, 
					'post_type' => 'post',
					'post_status' => 'publish',
					'orderby' => 'date',   
					'order' => 'DESC',
				);
				
				$posts = new WP_Query( $args );
				if( $posts->have_posts() ):
				    //* Build an option tag for each post, selecting the one that matches the currently-set post id
					while ( $posts->have_posts() ) : $posts->the_post();
						$id = get_the_ID();
						$option = "<option value='";
						$option .= $id;
						$option .= "'";
						if ($id == $post_id)
						{
							$option .= " selected";
						}
						$option .= ">";
						
						echo $option;
						echo get_the_title() . '  - (' . get_the_date("j M 'y") . ')';
										
						echo '</option>';
						echo "\r\n"; //Just for readability
					
					endwhile;
					
				endif;
				wp_reset_postdata();				
				
				?>
				
			</select>    

		</p>

		<?php

	}

}
