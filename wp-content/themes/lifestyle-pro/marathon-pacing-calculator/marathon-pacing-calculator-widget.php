<?php
/**
 * Genesis Framework.
 *
 * WARNING: This file is part of the core Genesis Framework. DO NOT edit this file under any circumstances.
 * Please do all modifications in the form of a child theme.
 *
 * @package Genesis\Widgets
 * @author  StudioPress
 * @license GPL-2.0+
 * @link    http://my.studiopress.com/themes/genesis/
 */

/**
 * Genesis Featured Post widget class.
 *
 * @since 0.1.8
 *
 * @package Genesis\Widgets
 */
class Marathon_Pacing_Calculator_Widget extends WP_Widget {

	/**
	 * Holds widget settings defaults, populated in constructor.
	 *
	 * @var array
	 */
	protected $defaults;

	/**
	 * Constructor. Set the default widget options and create widget.
	 *
	 * @since 0.1.8
	 */
	function __construct() {

		$this->defaults = array(
			'title'                   => '',
			'headline_1_id'           => '',
			'headline_2_id'           => '',
			'headline_3_id'           => '',
			'headline_4_id'           => '',
			'headline_5_id'           => '',
			'headline_6_id'           => ''
		);

		$widget_ops = array(
			'classname'   => 'marathon-pacing-calculator',
			'description' => __( 'The marathon pacing calculator widget', 'custom' ),
		);

		$control_ops = array(
			'id_base' => 'marathon-pacing-calculator',
			'width'   => 505,
			'height'  => 350,
		);

		//remove_filter( 'genesis_attr_entry', 'genesis_attributes_entry' );
		//add_filter( 'genesis_attr_entry', 'custom_add_entryclasses_attr' );
		
		parent::__construct( 'marathon-pacing-calculator', __( 'Flying Runner - Marathon Pacing Calculator', 'custom' ), $widget_ops, $control_ops );

	}
	
	/**
	 * Echo the widget content.
	 *
	 * @since 0.1.8
	 *
	 * @param array $args Display arguments including before_title, after_title, before_widget, and after_widget.
	 * @param array $instance The settings for the particular instance of the widget
	 */
	function widget( $args, $instance ) {

		global $wp_query, $_genesis_displayed_ids;

		extract( $args );

		//* Merge with defaults
		$instance = wp_parse_args( (array) $instance, $this->defaults );

		echo $before_widget;

			
		?>
		
		
		<span>Age:</span>
		<select id="age-category">
			<option value="Any">Any</option>
			<option value="18-39">18 to 39</option>
			<option value="40-49">40 to 49</option>
			<option value="50-59">50 to 59</option>
			<option value="60+">60 and over</option>
		</select> 		
		<br>
		<span>Number of previous marathons:</span>
		<select id="previous-marathons">
			<option value="Any">Any</option>
			<option value="0">None</option>
			<option value="1">1</option>
			<option value="2">2</option>
			<option value="3">3</option>
			<option value="3">4</option>
			<option value="3">5</option>
			<option value="6-10">6 to 10</option>
			<option value=">10">More than 10</option>
		</select> 		
		<br>				
		<span>Target time:</span> <input type="text" id="target-time">
		<br>
			
		</div>
		<input type="submit" name="predict" class="predictor-submit" id="predictor" value="Calculate my splits">

		<br>
		<p>Based on the pacing of <span id="number-of-runners"></span> runners who ran with +/- 4 minutes of this time, you should run these splits:</span> 
		<div id="number-of-runners-icons"></div>
		
		<div id="splits-results">
		 <table style="width:100%">
			  <tr>
				<th>Distance</th>
				<th>Time</th>
			  </tr>
			  <tr>
				<td>5km</td>
				<td id="5k-split"></td>
			  </tr>
  			  <tr>
				<td>10km</td>
				<td id="10k-split"></td>
			  </tr>
  			  <tr>
				<td>15km</td>
				<td id="15k-split"></td>
			  </tr>
  			  <tr>
				<td>20km</td>
				<td id="20k-split"></td>
			  </tr>
  			  <tr>
				<td>Halfway</td>
				<td id="21k-split"></td>
			  </tr>
  			  <tr>
				<td>25km</td>
				<td id="25k-split"></td>
			  </tr>
  			  <tr>
				<td>30km</td>
				<td id="30k-split"></td>
			  </tr>
  			  <tr>
				<td>35km</td>
				<td id="35k-split"></td>
			  </tr>
  			  <tr>
				<td>40km</td>
				<td id="40k-split"></td>
			  </tr>
  			  <tr>
				<td>Finish</td>
				<td id="finish" style="font-weight: bold"></td>
			  </tr>
		</table> 
		</div>
		
		<div id="debug" style="background-color: #eee;">
		
				
		<?php
		echo $after_widget;

	}

	/**
	 * Update a particular instance.
	 *
	 * This function should check that $new_instance is set correctly.
	 * The newly calculated value of $instance should be returned.
	 * If "false" is returned, the instance won't be saved/updated.
	 *
	 * @since 0.1.8
	 *
	 * @param array $new_instance New settings for this instance as input by the user via form()
	 * @param array $old_instance Old settings for this instance
	 * @return array Settings to save or bool false to cancel saving
	 */
	function update( $new_instance, $old_instance ) {

		$new_instance['title']     = strip_tags( $new_instance['title'] );
		$new_instance['more_text'] = strip_tags( $new_instance['more_text'] );
		$new_instance['post_info'] = wp_kses_post( $new_instance['post_info'] );
		return $new_instance;

	}

	/**
	 * Echo the settings update form.
	 *
	 * @since 0.1.8
	 *
	 * @param array $instance Current settings
	 */
	function form( $instance ) {

		//* Merge with defaults
		$instance = wp_parse_args( (array) $instance, $this->defaults );

		?>
		
		
		<?php

	}

}
